#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∞–≤–∏–ª –∑–∞—â–∏—Ç—ã –≤–µ—Ç–æ–∫ –≤ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./setup-branch-protection.sh [repo_owner] [repo_name] [github_token]

set -e

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
REPO_OWNER=${1:-$(echo "$GITHUB_REPOSITORY" | cut -d'/' -f1)}
REPO_NAME=${2:-$(echo "$GITHUB_REPOSITORY" | cut -d'/' -f2)}
GITHUB_TOKEN=${3:-$GITHUB_TOKEN}

if [[ -z "$GITHUB_TOKEN" ]]; then
    echo "‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è GitHub —Ç–æ–∫–µ–Ω"
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [repo_owner] [repo_name] [github_token]"
    exit 1
fi

API_URL="https://api.github.com"

echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤–∏–ª –∑–∞—â–∏—Ç—ã –≤–µ—Ç–æ–∫ –¥–ª—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è $REPO_OWNER/$REPO_NAME"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ –∑–∞—â–∏—Ç—ã –≤–µ—Ç–∫–∏
create_branch_protection() {
    local branch=$1
    local description=$2
    
    echo "üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤–∏–ª –¥–ª—è –≤–µ—Ç–∫–∏: $branch ($description)"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –≤–µ—Ç–∫–∏
    if ! gh api --silent "repos/$REPO_OWNER/$REPO_NAME/branches/$branch"; then
        echo "‚ö†Ô∏è –í–µ—Ç–∫–∞ $branch –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É"
        return 0
    fi
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª–æ –∑–∞—â–∏—Ç—ã –≤–µ—Ç–∫–∏
    response=$(gh api --method PUT \
        "repos/$REPO_OWNER/$REPO_NAME/branches/$branch/protection" \
        --field required_status_checks='{
            "strict": true,
            "contexts": [
                "Backend CI/CD (test)",
                "Frontend CI/CD (test)",
                "Django CI (build)"
            ]
        }' \
        --field enforce_admins=true \
        --field required_pull_request_reviews='{
            "required_approving_review_count": 1,
            "dismiss_stale_reviews": true,
            "require_code_owner_reviews": false,
            "require_last_push_approval": true,
            "bypass_pull_request_allowances": {
                "users": [],
                "teams": []
            }
        }' \
        --field restrictions=null \
        --field allow_force_pushes=false \
        --field allow_deletions=false \
        --field block_creations=false \
        --field required_conversation_resolution=true \
        --field lock_branch=false \
        --field allow_fork_syncing=false \
        --field required_linear_history=false 2>/dev/null || echo "FAILED")
    
    if [[ "$response" == "FAILED" ]]; then
        echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è –≤–µ—Ç–∫–∏ $branch (–≤–æ–∑–º–æ–∂–Ω–æ, –æ–Ω–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç)"
        
        # –ü—ã—Ç–∞–µ–º—Å—è –æ–±–Ω–æ–≤–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞
        echo "üîÑ –ü–æ–ø—ã—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø—Ä–∞–≤–∏–ª..."
        response=$(gh api --method PATCH \
            "repos/$REPO_OWNER/$REPO_NAME/branches/$branch/protection" \
            --field required_status_checks='{
                "strict": true,
                "contexts": [
                    "Backend CI/CD (test)",
                    "Frontend CI/CD (test)",
                    "Django CI (build)"
                ]
            }' \
            --field enforce_admins=true \
            --field required_pull_request_reviews='{
                "required_approving_review_count": 1,
                "dismiss_stale_reviews": true,
                "require_code_owner_reviews": false,
                "require_last_push_approval": true,
                "bypass_pull_request_allowances": {
                    "users": [],
                    "teams": []
                }
            }' \
            --field restrictions=null \
            --field allow_force_pushes=false \
            --field allow_deletions=false \
            --field block_creations=false \
            --field required_conversation_resolution=true \
            --field lock_branch=false \
            --field allow_fork_syncing=false \
            --field required_linear_history=false 2>/dev/null || echo "FAILED")
        
        if [[ "$response" == "FAILED" ]]; then
            echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è –≤–µ—Ç–∫–∏ $branch"
            return 1
        else
            echo "‚úÖ –ü—Ä–∞–≤–∏–ª–∞ –¥–ª—è –≤–µ—Ç–∫–∏ $branch —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã"
        fi
    else
        echo "‚úÖ –ü—Ä–∞–≤–∏–ª–∞ –¥–ª—è –≤–µ—Ç–∫–∏ $branch —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã"
    fi
    
    return 0
}

# –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–π –≤–µ—Ç–∫–∏ (main)
create_branch_protection "main" "–û—Å–Ω–æ–≤–Ω–∞—è –≤–µ—Ç–∫–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞"

# –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è –≤–µ—Ç–∫–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (develop)
create_branch_protection "develop" "–í–µ—Ç–∫–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"

echo ""
echo "üìä –¢–µ–∫—É—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –∑–∞—â–∏—Ç—ã –≤–µ—Ç–æ–∫:"

# –í—ã–≤–æ–¥–∏–º —Ç–µ–∫—É—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è –≤—Å–µ—Ö –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö –≤–µ—Ç–æ–∫
branches=("main" "develop")
for branch in "${branches[@]}"; do
    echo ""
    echo "üîí –í–µ—Ç–∫–∞: $branch"
    
    if protection=$(gh api "repos/$REPO_OWNER/$REPO_NAME/branches/$branch/protection" 2>/dev/null); then
        echo "  ‚úÖ –í–µ—Ç–∫–∞ –∑–∞—â–∏—â–µ–Ω–∞"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–µ–±—É–µ–º—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
        required_checks=$(echo "$protection" | jq -r '.required_status_checks.contexts[]?' 2>/dev/null || echo "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
        if [[ -n "$required_checks" ]]; then
            echo "  üìã –¢—Ä–µ–±—É–µ–º—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏:"
            echo "$required_checks" | while read -r check; do
                echo "    - $check"
            done
        fi
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–µ–±—É–µ–º—ã–µ —Ä–µ–≤—å—é
        if reviews=$(echo "$protection" | jq -r '.required_pull_request_reviews.required_approving_review_count' 2>/dev/null); then
            echo "  üë• –¢—Ä–µ–±—É–µ–º—ã–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è: $reviews"
        fi
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—Ä—É–≥–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        strict=$(echo "$protection" | jq -r '.required_status_checks.strict' 2>/dev/null)
        echo "  üîÑ –°—Ç—Ä–æ–≥–∏–π —Å—Ç–∞—Ç—É—Å: $strict"
        
        enforce_admins=$(echo "$protection" | jq -r '.enforce_admins.enabled' 2>/dev/null)
        echo "  üëë –ü—Ä–∏–º–µ–Ω—è—Ç—å –∫ –∞–¥–º–∏–Ω–∞–º: $enforce_admins"
        
        dismiss_stale=$(echo "$protection" | jq -r '.required_pull_request_reviews.dismiss_stale_reviews' 2>/dev/null)
        echo "  üóëÔ∏è –û—Ç–∫–ª–æ–Ω—è—Ç—å —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ: $dismiss_stale"
        
    else
        echo "  ‚ùå –í–µ—Ç–∫–∞ –Ω–µ –∑–∞—â–∏—â–µ–Ω–∞ –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
done

echo ""
echo "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤–∏–ª –∑–∞—â–∏—Ç—ã –≤–µ—Ç–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üìù –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"
echo "1. –†–µ–≥—É–ª—è—Ä–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å —Ç—Ä–µ–±—É–µ–º—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫ —Å—Ç–∞—Ç—É—Å–∞"
echo "2. –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫ –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π"
echo "3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –≤ –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö –≤–µ—Ç–∫–∞—Ö"
echo "4. –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é"