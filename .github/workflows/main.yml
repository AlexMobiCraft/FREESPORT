name: Django CI

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  build:

    runs-on: ubuntu-latest
    
    # Глобальные переменные окружения для всего job
    env:
      SECRET_KEY: a_test_secret_key_for_ci
      DEBUG: 'False'
      DB_NAME: test_db
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: localhost
      DB_PORT: 5432
      DJANGO_SETTINGS_MODULE: freesport.settings.development
      
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.12']

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
        pip install pytest-django pytest-cov flake8
    
    - name: Wait for PostgreSQL
      run: |
        sudo apt-get update && sudo apt-get install -y netcat-traditional
        # В GitHub Actions сервисы доступны через localhost
        for i in {1..30}; do
          nc -z localhost 5432 && echo "Postgres is up." && exit 0
          echo "Waiting for Postgres... ($i/30)"
          sleep 2
        done
        echo "Postgres did not start in time."
        exit 1

    - name: Lint with flake8
      run: |
        pip install flake8
        # --exit-zero не прерывает выполнение при ошибках, только сообщает о них
        flake8 backend/ --max-line-length=89 --extend-ignore=E203,W503 --exit-zero

    - name: Create .env file for testing
      run: |
        cd backend
        cat > .env << EOF
        SECRET_KEY=test-secret-key-for-ci-cd-only
        DB_NAME=test_db
        DB_USER=postgres
        DB_PASSWORD=postgres
        DB_HOST=localhost
        DB_PORT=5432
        DJANGO_SETTINGS_MODULE=freesport.settings.development
        EOF
        
    - name: Run Django system checks
      run: |
        cd backend
        python manage.py check
        
    - name: Apply migrations
      run: |
        cd backend
        python manage.py migrate --noinput
        
    - name: Run tests
      run: |
        cd backend
        pytest --tb=short -v
