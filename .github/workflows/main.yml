name: Django CI

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.10']

    services:
      db:
        image: postgres:13
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: runner
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
    
    - name: Wait for PostgreSQL
      run: |
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º netcat-traditional, —Ç–∞–∫ –∫–∞–∫ netcat - –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–∞–∫–µ—Ç
        sudo apt-get update && sudo apt-get install -y netcat-traditional
        # –¶–∏–∫–ª –æ–∂–∏–¥–∞–Ω–∏—è
        for i in {1..30}; do
          nc -z db 5432 && echo "Postgres is up." && exit 0
          echo "Waiting for Postgres... ($i/30)"
          sleep 2
        done
        echo "Postgres did not start in time."
        exit 1

    - name: Run tests
      env:
        SECRET_KEY: a_test_secret_key_for_ci
        DEBUG: 'False'
        # üëá –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        DB_NAME: test_db
        DB_USER: runner
        DB_PASSWORD: password
        DB_HOST: db
        DB_PORT: 5432
      run: |
        # –ó–∞–ø—É—Å–∫–∞–µ–º pytest –∏–∑ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        cd backend
        pytest
