name: –ü—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–¥ —Å–ª–∏—è–Ω–∏–µ–º

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main, develop]

jobs:
  # –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞
  quality-checks:
    name: –ü—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout –∫–æ–¥–∞
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # –ü–æ–ª—É—á–∞–µ–º –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
        
    - name: –ê–Ω–∞–ª–∏–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
      run: |
        echo "üîç –ê–Ω–∞–ª–∏–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ Pull Request..."
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}..origin/${{ github.head_ref }})
        echo "–ò–∑–º–µ–Ω–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:"
        echo "$CHANGED_FILES"
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–∏–ø—ã –∏–∑–º–µ–Ω–µ–Ω–∏–π
        BACKEND_CHANGED=false
        FRONTEND_CHANGED=false
        DOCKER_CHANGED=false
        CI_CHANGED=false
        
        while IFS= read -r file; do
          if [[ "$file" == backend/* ]]; then
            BACKEND_CHANGED=true
          elif [[ "$file" == frontend/* ]]; then
            FRONTEND_CHANGED=true
          elif [[ "$file" == docker/* || "$file" == *Dockerfile* ]]; then
            DOCKER_CHANGED=true
          elif [[ "$file" == .github/* ]]; then
            CI_CHANGED=true
          fi
        done <<< "$CHANGED_FILES"
        
        echo "BACKEND_CHANGED=$BACKEND_CHANGED" >> $GITHUB_ENV
        echo "FRONTEND_CHANGED=$FRONTEND_CHANGED" >> $GITHUB_ENV
        echo "DOCKER_CHANGED=$DOCKER_CHANGED" >> $GITHUB_ENV
        echo "CI_CHANGED=$CI_CHANGED" >> $GITHUB_ENV
        
        echo "üìä –¢–∏–ø—ã –∏–∑–º–µ–Ω–µ–Ω–∏–π:"
        echo "  –ë—ç–∫–µ–Ω–¥: $BACKEND_CHANGED"
        echo "  –§—Ä–æ–Ω—Ç–µ–Ω–¥: $FRONTEND_CHANGED"
        echo "  Docker: $DOCKER_CHANGED"
        echo "  CI/CD: $CI_CHANGED"

    - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ PR
      run: |
        echo "üìè –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ Pull Request..."
        
        # –°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫
        ADDED_LINES=$(git diff --numstat origin/${{ github.base_ref }}..origin/${{ github.head_ref }} | awk '{sum += $1} END {print sum}')
        DELETED_LINES=$(git diff --numstat origin/${{ github.base_ref }}..origin/${{ github.head_ref }} | awk '{sum += $2} END {print sum}')
        TOTAL_CHANGED=$((ADDED_LINES + DELETED_LINES))
        
        echo "–î–æ–±–∞–≤–ª–µ–Ω–æ —Å—Ç—Ä–æ–∫: $ADDED_LINES"
        echo "–£–¥–∞–ª–µ–Ω–æ —Å—Ç—Ä–æ–∫: $DELETED_LINES"
        echo "–í—Å–µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–æ: $TOTAL_CHANGED"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–∏–µ PR
        if [[ $TOTAL_CHANGED -gt 2000 ]]; then
          echo "‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –±–æ–ª—å—à–æ–π Pull Request ($TOTAL_CHANGED —Å—Ç—Ä–æ–∫)"
          echo "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä–∞–∑–±–∏—Ç—å –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–µ–Ω—å—à–∏—Ö PR"
          echo "::warning::Large PR detected ($TOTAL_CHANGED lines). Consider splitting into smaller PRs."
        elif [[ $TOTAL_CHANGED -gt 1000 ]]; then
          echo "‚ÑπÔ∏è –°—Ä–µ–¥–Ω–∏–π —Ä–∞–∑–º–µ—Ä Pull Request"
        else
          echo "‚úÖ –ü—Ä–∏–µ–º–ª–µ–º—ã–π —Ä–∞–∑–º–µ—Ä Pull Request"
        fi
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —à–∞–≥–∞—Ö
        echo "PR_SIZE=$TOTAL_CHANGED" >> $GITHUB_ENV

    - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–µ—Å—Ç–æ–≤
      run: |
        echo "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–µ—Å—Ç–æ–≤..."
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}..origin/${{ github.head_ref }})
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –∏—Å—Ö–æ–¥–Ω–æ–º –∫–æ–¥–µ
        SOURCE_CHANGED=false
        TESTS_ADDED=false
        
        while IFS= read -r file; do
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∏—Å—Ö–æ–¥–Ω–æ–º –∫–æ–¥–µ –±—ç–∫–µ–Ω–¥–∞
          if [[ "$file" == backend/apps/**/*.py ]] && [[ ! "$file" == **/test*.py ]] && [[ ! "$file" == **/tests/** ]]; then
            SOURCE_CHANGED=true
          fi
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–µ—Å—Ç–æ–≤
          if [[ "$file" == **/test*.py ]] || [[ "$file" == **/tests/** ]]; then
            TESTS_ADDED=true
          fi
        done <<< "$CHANGED_FILES"
        
        echo "SOURCE_CHANGED=$SOURCE_CHANGED" >> $GITHUB_ENV
        echo "TESTS_ADDED=$TESTS_ADDED" >> $GITHUB_ENV
        
        if [[ "$SOURCE_CHANGED" == "true" && "$TESTS_ADDED" == "false" ]]; then
          echo "‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∏—Å—Ö–æ–¥–Ω–æ–º –∫–æ–¥–µ –±–µ–∑ —Ç–µ—Å—Ç–æ–≤"
          echo "::warning::Source code changes detected without tests. Consider adding tests."
        else
          echo "‚úÖ –¢–µ—Å—Ç—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∏—Å—Ö–æ–¥–Ω–æ–º –∫–æ–¥–µ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã"
        fi

    - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
      run: |
        echo "üìö –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏..."
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}..origin/${{ github.head_ref }})
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ API
        API_CHANGED=false
        DOCS_UPDATED=false
        
        while IFS= read -r file; do
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ API
          if [[ "$file" == backend/apps/**/views.py ]] || [[ "$file" == backend/apps/**/serializers.py ]] || [[ "$file" == backend/apps/**/urls.py ]]; then
            API_CHANGED=true
          fi
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
          if [[ "$file" == docs/** ]] || [[ "$file" == **/*.md ]]; then
            DOCS_UPDATED=true
          fi
        done <<< "$CHANGED_FILES"
        
        if [[ "$API_CHANGED" == "true" && "$DOCS_UPDATED" == "false" ]]; then
          echo "‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ API –±–µ–∑ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏"
          echo "::warning::API changes detected without documentation updates. Consider updating docs."
        else
          echo "‚úÖ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ API –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã"
        fi

    - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
      run: |
        echo "üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..."
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}..origin/${{ github.head_ref }})
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–µ–∫—Ä–µ—Ç–æ–≤ –≤ –∫–æ–¥–µ
        SECRETS_FOUND=false
        
        while IFS= read -r file; do
          if [[ -f "$file" ]]; then
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ–∫—Ä–µ—Ç–æ–≤
            if grep -q -E "(password|secret|key|token)\s*=\s*['\"][^'\"]{8,}" "$file" 2>/dev/null; then
              echo "‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ–∫—Ä–µ—Ç—ã –≤ —Ñ–∞–π–ª–µ: $file"
              SECRETS_FOUND=true
            fi
          fi
        done <<< "$CHANGED_FILES"
        
        if [[ "$SECRETS_FOUND" == "true" ]]; then
          echo "::error::Potential secrets found in code. Please review and remove."
          exit 1
        else
          echo "‚úÖ –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ–∫—Ä–µ—Ç—ã –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã"
        fi

    - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
      run: |
        echo "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ñ–∞–π–ª–∞—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        if git diff --name-only origin/${{ github.base_ref }}..origin/${{ github.head_ref }} | grep -E "(requirements\.txt|package\.json|package-lock\.json|yarn\.lock)"; then
          echo "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ñ–∞–π–ª–∞—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±—ç–∫–µ–Ω–¥ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
          if [[ -f "backend/requirements.txt" ]]; then
            echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±—ç–∫–µ–Ω–¥ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
            cd backend
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π
            if command -v safety &> /dev/null; then
              safety check --json --output safety-report.json || true
              echo "–û—Ç—á–µ—Ç –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ safety-report.json"
            else
              echo "‚ö†Ô∏è Safety –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É"
            fi
            
            cd ..
          fi
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
          if [[ -f "frontend/package.json" ]]; then
            echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
            cd frontend
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π
            if command -v npm &> /dev/null; then
              npm audit --json > npm-audit-report.json || true
              echo "–û—Ç—á–µ—Ç –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ npm-audit-report.json"
            else
              echo "‚ö†Ô∏è npm –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É"
            fi
            
            cd ..
          fi
        else
          echo "‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã"
        fi

    - name: –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –æ –ø—Ä–æ–≤–µ—Ä–∫–∞—Ö
      run: |
        echo "üìä –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –æ –ø—Ä–æ–≤–µ—Ä–∫–∞—Ö..."
        
        cat > pre-merge-checks-report.md << EOF
        # üìä –û—Ç—á–µ—Ç –æ –ø—Ä–æ–≤–µ—Ä–∫–∞—Ö –ø–µ—Ä–µ–¥ —Å–ª–∏—è–Ω–∏–µ–º
        
        ## üìã –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        - **Pull Request:** #${{ github.event.number }}
        - **–í–µ—Ç–∫–∞:** ${{ github.head_ref }} ‚Üí ${{ github.base_ref }}
        - **–ê–≤—Ç–æ—Ä:** ${{ github.actor }}
        - **–†–∞–∑–º–µ—Ä PR:** ${{ env.PR_SIZE }} —Å—Ç—Ä–æ–∫
        
        ## üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–æ–∫
        
        ### üìè –†–∞–∑–º–µ—Ä PR
        $([[ ${{ env.PR_SIZE }} -gt 2000 ]] && echo "‚ö†Ô∏è **–ë–æ–ª—å—à–æ–π PR** (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä–∞–∑–±–∏—Ç—å)" || echo "‚úÖ **–ü—Ä–∏–µ–º–ª–µ–º—ã–π —Ä–∞–∑–º–µ—Ä**")
        
        ### üß™ –¢–µ—Å—Ç—ã
        $([[ ${{ env.TESTS_ADDED }} == "true" ]] && echo "‚úÖ **–¢–µ—Å—Ç—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã**" || ([[ ${{ env.SOURCE_CHANGED }} == "true" ]] && echo "‚ö†Ô∏è **–¢–µ—Å—Ç—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç**" || echo "‚ÑπÔ∏è **–¢–µ—Å—Ç—ã –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è**"))
        
        ### üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
        $([[ ${{ env.DOCS_UPDATED }} == "true" ]] && echo "‚úÖ **–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞**" || ([[ ${{ env.API_CHANGED }} == "true" ]] && echo "‚ö†Ô∏è **–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∞**" || echo "‚ÑπÔ∏è **–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è**"))
        
        ### üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
        ‚úÖ **–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞**
        
        ### üì¶ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        ‚úÖ **–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞**
        
        ## üìù –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        $([[ ${{ env.PR_SIZE }} -gt 2000 ]] && echo "- –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–∞–∑–±–∏—Ç—å PR –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–µ–Ω—å—à–∏—Ö" || echo "")
        $([[ ${{ env.SOURCE_CHANGED }} == "true" && ${{ env.TESTS_ADDED }} == "false" ]] && echo "- –î–æ–±–∞–≤—å—Ç–µ —Ç–µ—Å—Ç—ã –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –∏—Å—Ö–æ–¥–Ω–æ–º –∫–æ–¥–µ" || echo "")
        $([[ ${{ env.API_CHANGED }} == "true" && ${{ env.DOCS_UPDATED }} == "false" ]] && echo "- –û–±–Ω–æ–≤–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ API" || echo "")
        
        ---
        *–≠—Ç–æ—Ç –æ—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏*
        EOF
        
        echo "–û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ pre-merge-checks-report.md"

    - name: –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç—á–µ—Ç–∞
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: pre-merge-checks-report
        path: |
          pre-merge-checks-report.md
          backend/safety-report.json
          frontend/npm-audit-report.json

    - name: –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ PR —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        script: |
          const fs = require('fs');
          
          try {
            const report = fs.readFileSync('pre-merge-checks-report.md', 'utf8');
            
            // –ò—â–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const existingComment = comments.data.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('–û—Ç—á–µ—Ç –æ –ø—Ä–æ–≤–µ—Ä–∫–∞—Ö –ø–µ—Ä–µ–¥ —Å–ª–∏—è–Ω–∏–µ–º')
            );
            
            if (existingComment) {
              // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: report,
              });
            } else {
              // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: report,
              });
            }
          } catch (error) {
            console.log('–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ PR:', error.message);
          }