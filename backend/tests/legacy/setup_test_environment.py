#!/usr/bin/env python
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∑–∞–ø—É—Å–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –ø–µ—Ä–µ–¥ —Ç–µ—Å—Ç–∞–º–∏
"""
import os
import sys
import time
import subprocess
import requests
import redis


def check_docker():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç Docker –µ—Å–ª–∏ –Ω—É–∂–Ω–æ"""
    print("üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker...")
    try:
        result = subprocess.run(['docker', 'ps'], capture_output=True, text=True, timeout=10)
        if result.returncode == 0:
            print("   ‚úÖ Docker —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return True
        else:
            print("   ‚ùå Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Docker Desktop –≤—Ä—É—á–Ω—É—é")
            return False
    except:
        print("   ‚ùå Docker –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop")
        return False


def check_redis():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç Redis –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –µ—Å–ª–∏ –Ω—É–∂–Ω–æ"""
    print("üî¥ –ü—Ä–æ–≤–µ—Ä–∫–∞ Redis...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    try:
        result = subprocess.run(['docker', 'ps', '--filter', 'name=redis-test', '--format', '{{.Names}}'], 
                              capture_output=True, text=True, timeout=10)
        if 'redis-test' in result.stdout:
            print("   ‚úÖ Redis –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —É–∂–µ –∑–∞–ø—É—â–µ–Ω")
            return check_redis_connection()
    except:
        pass
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Redis –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    print("   –ó–∞–ø—É—Å–∫ Redis –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞...")
    try:
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–π –µ—Å–ª–∏ –µ—Å—Ç—å
        subprocess.run(['docker', 'stop', 'redis-test'], capture_output=True, timeout=10)
        subprocess.run(['docker', 'rm', 'redis-test'], capture_output=True, timeout=10)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π
        result = subprocess.run([
            'docker', 'run', '-d', '-p', '6379:6379', '--name', 'redis-test', 'redis:alpine'
        ], capture_output=True, text=True, timeout=30)
        
        if result.returncode == 0:
            time.sleep(2)  # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
            if check_redis_connection():
                print("   ‚úÖ Redis –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω")
                return True
        
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Redis: {result.stderr}")
        return False
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False


def check_redis_connection():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Redis"""
    try:
        r = redis.Redis(host='localhost', port=6379, db=1)
        r.ping()
        return True
    except:
        return False


def check_virtual_environment():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ –ª–∏ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ"""
    print("üêç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é VIRTUAL_ENV
    if os.environ.get('VIRTUAL_ENV'):
        venv_path = os.environ.get('VIRTUAL_ENV')
        print(f"   ‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ: {venv_path}")
        return True
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–∞–ø–∫–∏ venv –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    if os.path.exists('venv'):
        print("   ‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–∞ –ø–∞–ø–∫–∞ venv, –Ω–æ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ")
        print("   –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ:")
        print("   Windows: .\\venv\\Scripts\\activate")
        print("   Linux/Mac: source venv/bin/activate")
        return False
    
    print("   ‚ùå –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
    print("   –°–æ–∑–¥–∞–π—Ç–µ –∏ –∞–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ:")
    print("   python -m venv venv")
    print("   Windows: .\\venv\\Scripts\\activate")
    print("   Linux/Mac: source venv/bin/activate")
    return False


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    print("üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è FREESPORT")
    print("=" * 50)
    
    all_ok = True
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    if not check_virtual_environment():
        all_ok = False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker
    if not check_docker():
        all_ok = False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Redis
    if not check_redis():
        all_ok = False
    
    print("=" * 50)
    if all_ok:
        print("‚úÖ –û–∫—Ä—É–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤!")
        print("\n–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å:")
        print("  python run_functional_tests_user_management.py")
        print("  –∏–ª–∏ –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã")
    else:
        print("‚ùå –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –∏—Ö –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º —Ç–µ—Å—Ç–æ–≤.")
        sys.exit(1)


if __name__ == "__main__":
    main()
