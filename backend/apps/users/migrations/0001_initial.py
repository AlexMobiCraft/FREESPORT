# Generated by Django 4.2.16 on 2025-08-09 12:09

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Email адрес"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("retail", "Розничный покупатель"),
                            ("wholesale_level1", "Оптовик уровень 1"),
                            ("wholesale_level2", "Оптовик уровень 2"),
                            ("wholesale_level3", "Оптовик уровень 3"),
                            ("trainer", "Тренер"),
                            ("federation_rep", "Представитель федерации"),
                            ("admin", "Администратор"),
                        ],
                        default="retail",
                        max_length=20,
                        verbose_name="Роль пользователя",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        max_length=12,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Номер телефона должен быть в формате: '+79001234567'",
                                regex="^\\+7\\d{10}$",
                            )
                        ],
                        verbose_name="Номер телефона",
                    ),
                ),
                (
                    "company_name",
                    models.CharField(
                        blank=True,
                        help_text="Для B2B пользователей",
                        max_length=200,
                        verbose_name="Название компании",
                    ),
                ),
                (
                    "tax_id",
                    models.CharField(
                        blank=True,
                        help_text="ИНН для B2B пользователей",
                        max_length=12,
                        verbose_name="ИНН",
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(
                        default=False,
                        help_text="B2B пользователи требуют верификации администратором",
                        verbose_name="Верифицирован",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Пользователь",
                "verbose_name_plural": "Пользователи",
                "db_table": "users",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "legal_name",
                    models.CharField(
                        max_length=255, verbose_name="Юридическое название"
                    ),
                ),
                (
                    "tax_id",
                    models.CharField(max_length=12, unique=True, verbose_name="ИНН"),
                ),
                ("kpp", models.CharField(blank=True, max_length=9, verbose_name="КПП")),
                ("legal_address", models.TextField(verbose_name="Юридический адрес")),
                (
                    "bank_name",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Название банка"
                    ),
                ),
                (
                    "bank_bik",
                    models.CharField(
                        blank=True, max_length=9, verbose_name="БИК банка"
                    ),
                ),
                (
                    "account_number",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Расчетный счет"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="company",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Компания",
                "verbose_name_plural": "Компании",
                "db_table": "companies",
            },
        ),
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "address_type",
                    models.CharField(
                        choices=[
                            ("shipping", "Адрес доставки"),
                            ("legal", "Юридический адрес"),
                        ],
                        default="shipping",
                        max_length=10,
                        verbose_name="Тип адреса",
                    ),
                ),
                (
                    "full_name",
                    models.CharField(
                        max_length=100, verbose_name="Полное имя получателя"
                    ),
                ),
                ("phone", models.CharField(max_length=12, verbose_name="Телефон")),
                ("city", models.CharField(max_length=100, verbose_name="Город")),
                ("street", models.CharField(max_length=200, verbose_name="Улица")),
                ("building", models.CharField(max_length=10, verbose_name="Дом")),
                (
                    "apartment",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Квартира/офис"
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(max_length=6, verbose_name="Почтовый индекс"),
                ),
                (
                    "is_default",
                    models.BooleanField(
                        default=False, verbose_name="Адрес по умолчанию"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="addresses",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Адрес",
                "verbose_name_plural": "Адреса",
                "db_table": "addresses",
                "unique_together": {("user", "address_type", "is_default")},
            },
        ),
    ]
