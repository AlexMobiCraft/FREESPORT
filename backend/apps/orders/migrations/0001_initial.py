# Generated by Django 4.2.16 on 2025-08-10 10:25

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("products", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "order_number",
                    models.CharField(
                        editable=False,
                        max_length=50,
                        unique=True,
                        verbose_name="Номер заказа",
                    ),
                ),
                (
                    "customer_name",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Имя клиента"
                    ),
                ),
                (
                    "customer_email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="Email клиента"
                    ),
                ),
                (
                    "customer_phone",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Телефон клиента"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Ожидает обработки"),
                            ("confirmed", "Подтвержден"),
                            ("processing", "В обработке"),
                            ("shipped", "Отправлен"),
                            ("delivered", "Доставлен"),
                            ("cancelled", "Отменен"),
                            ("refunded", "Возвращен"),
                        ],
                        default="pending",
                        max_length=50,
                        verbose_name="Статус заказа",
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Общая сумма",
                    ),
                ),
                (
                    "discount_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Сумма скидки",
                    ),
                ),
                (
                    "delivery_cost",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Стоимость доставки",
                    ),
                ),
                ("delivery_address", models.TextField(verbose_name="Адрес доставки")),
                (
                    "delivery_method",
                    models.CharField(
                        choices=[
                            ("pickup", "Самовывоз"),
                            ("courier", "Курьерская доставка"),
                            ("post", "Почтовая доставка"),
                            ("transport", "Транспортная компания"),
                        ],
                        max_length=50,
                        verbose_name="Способ доставки",
                    ),
                ),
                (
                    "delivery_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Дата доставки"
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        choices=[
                            ("card", "Банковская карта"),
                            ("cash", "Наличные"),
                            ("bank_transfer", "Банковский перевод"),
                            ("payment_on_delivery", "Оплата при получении"),
                        ],
                        max_length=50,
                        verbose_name="Способ оплаты",
                    ),
                ),
                (
                    "payment_status",
                    models.CharField(
                        choices=[
                            ("pending", "Ожидает оплаты"),
                            ("paid", "Оплачен"),
                            ("failed", "Ошибка оплаты"),
                            ("refunded", "Возвращен"),
                        ],
                        default="pending",
                        max_length=50,
                        verbose_name="Статус оплаты",
                    ),
                ),
                (
                    "payment_id",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="ID платежа (ЮKassa)"
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, verbose_name="Комментарии к заказу"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Заказ",
                "verbose_name_plural": "Заказы",
                "db_table": "orders",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Количество",
                    ),
                ),
                (
                    "unit_price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Цена за единицу",
                    ),
                ),
                (
                    "total_price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Общая стоимость",
                    ),
                ),
                (
                    "product_name",
                    models.CharField(max_length=300, verbose_name="Название товара"),
                ),
                (
                    "product_sku",
                    models.CharField(max_length=100, verbose_name="Артикул товара"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="orders.order",
                        verbose_name="Заказ",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.product",
                        verbose_name="Товар",
                    ),
                ),
            ],
            options={
                "verbose_name": "Элемент заказа",
                "verbose_name_plural": "Элементы заказа",
                "db_table": "order_items",
                "indexes": [
                    models.Index(
                        fields=["order", "product"],
                        name="order_items_order_i_f97371_idx",
                    )
                ],
            },
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(
                fields=["user", "status"], name="orders_user_id_17dbdf_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(
                fields=["status", "created_at"], name="orders_status_11db6c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(
                fields=["order_number"], name="orders_order_n_1336be_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(
                fields=["payment_status"], name="orders_payment_050188_idx"
            ),
        ),
    ]
