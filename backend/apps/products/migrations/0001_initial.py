# Generated by Django 4.2.16 on 2025-08-10 10:25

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Brand",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Название бренда"
                    ),
                ),
                ("slug", models.SlugField(unique=True, verbose_name="Slug")),
                (
                    "logo",
                    models.ImageField(
                        blank=True, upload_to="brands/", verbose_name="Логотип"
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                ("website", models.URLField(blank=True, verbose_name="Веб-сайт")),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Активный"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
            ],
            options={
                "verbose_name": "Бренд",
                "verbose_name_plural": "Бренды",
                "db_table": "brands",
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Название")),
                ("slug", models.SlugField(unique=True, verbose_name="Slug")),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "image",
                    models.ImageField(
                        blank=True, upload_to="categories/", verbose_name="Изображение"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Активная"),
                ),
                (
                    "sort_order",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Порядок сортировки"
                    ),
                ),
                (
                    "seo_title",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="SEO заголовок"
                    ),
                ),
                (
                    "seo_description",
                    models.TextField(blank=True, verbose_name="SEO описание"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="products.category",
                        verbose_name="Родительская категория",
                    ),
                ),
            ],
            options={
                "verbose_name": "Категория",
                "verbose_name_plural": "Категории",
                "db_table": "categories",
                "ordering": ["sort_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=300, verbose_name="Название")),
                ("slug", models.SlugField(unique=True, verbose_name="Slug")),
                ("description", models.TextField(verbose_name="Описание")),
                (
                    "short_description",
                    models.CharField(
                        blank=True, max_length=500, verbose_name="Краткое описание"
                    ),
                ),
                (
                    "retail_price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Розничная цена",
                    ),
                ),
                (
                    "opt1_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Оптовая цена уровень 1",
                    ),
                ),
                (
                    "opt2_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Оптовая цена уровень 2",
                    ),
                ),
                (
                    "opt3_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Оптовая цена уровень 3",
                    ),
                ),
                (
                    "trainer_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Цена для тренера",
                    ),
                ),
                (
                    "federation_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Цена для представителя федерации",
                    ),
                ),
                (
                    "recommended_retail_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Рекомендованная розничная цена (RRP)",
                    ),
                ),
                (
                    "max_suggested_retail_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Максимальная рекомендованная цена (MSRP)",
                    ),
                ),
                (
                    "sku",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Артикул"
                    ),
                ),
                (
                    "stock_quantity",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Количество на складе"
                    ),
                ),
                (
                    "min_order_quantity",
                    models.PositiveIntegerField(
                        default=1, verbose_name="Минимальное количество заказа"
                    ),
                ),
                (
                    "main_image",
                    models.ImageField(
                        upload_to="products/", verbose_name="Основное изображение"
                    ),
                ),
                (
                    "gallery_images",
                    models.JSONField(
                        blank=True, default=list, verbose_name="Галерея изображений"
                    ),
                ),
                (
                    "seo_title",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="SEO заголовок"
                    ),
                ),
                (
                    "seo_description",
                    models.TextField(blank=True, verbose_name="SEO описание"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Активный"),
                ),
                (
                    "is_featured",
                    models.BooleanField(default=False, verbose_name="Рекомендуемый"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "onec_id",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="ID в 1С"
                    ),
                ),
                (
                    "brand",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="products.brand",
                        verbose_name="Бренд",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="products.category",
                        verbose_name="Категория",
                    ),
                ),
            ],
            options={
                "verbose_name": "Товар",
                "verbose_name_plural": "Товары",
                "db_table": "products",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["is_active", "category"],
                        name="products_is_acti_8e1d32_idx",
                    ),
                    models.Index(
                        fields=["brand", "is_active"],
                        name="products_brand_i_2684af_idx",
                    ),
                    models.Index(fields=["sku"], name="products_sku_fe2039_idx"),
                    models.Index(
                        fields=["stock_quantity"], name="products_stock_q_5d82ff_idx"
                    ),
                ],
            },
        ),
    ]
