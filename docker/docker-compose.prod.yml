# Docker Compose для PRODUCTION на удаленном сервере

services:
  db:
    image: postgres:15-alpine
    container_name: freesport-db
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/
    networks:
      - freesport-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: freesport-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - freesport-network
    restart: unless-stopped

  backend:
    image: freesport-backend:latest
    container_name: freesport-backend
    environment:
      - DJANGO_SETTINGS_MODULE=freesport.settings.production
      - SECRET_KEY=${SECRET_KEY}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - DEBUG=0
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - ALLOWED_HOSTS=freesport.ru,www.freesport.ru,5.35.124.149,backend,nginx,localhost,127.0.0.1
      - CSRF_TRUSTED_ORIGINS=http://5.35.124.149,http://freesport.ru
    volumes:
      - ../backend/logs:/app/logs
    depends_on:
      - db
      - redis
    networks:
      - freesport-network
    restart: unless-stopped

  frontend:
    image: freesport-frontend:latest
    container_name: freesport-frontend
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    depends_on:
      - backend
    networks:
      - freesport-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: freesport-nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - backend_static:/var/www/static
      - backend_media:/var/www/media
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - frontend
    networks:
      - freesport-network
    restart: unless-stopped

  celery:
    image: freesport-backend:latest # Используем тот же образ, что и backend
    container_name: freesport-celery-worker
    command: celery -A freesport worker -l info
    environment:
      - DJANGO_SETTINGS_MODULE=freesport.settings.production
      - SECRET_KEY=${SECRET_KEY}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - DEBUG=0
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
    volumes:
      - ../backend/logs:/app/logs
    depends_on:
      - db
      - redis
    networks:
      - freesport-network
    restart: unless-stopped

  celery-beat:
    image: freesport-backend:latest # Используем тот же образ, что и backend
    container_name: freesport-celery-beat
    command: celery -A freesport beat -l info
    environment:
      - DJANGO_SETTINGS_MODULE=freesport.settings.production
      - SECRET_KEY=${SECRET_KEY}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - DEBUG=0
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
    volumes:
      - ../backend/logs:/app/logs
    depends_on:
      - db
      - redis
    networks:
      - freesport-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  backend_media:
  backend_static:

networks:
  freesport-network:
    driver: bridge