param(
    [string]$ComposeFile = "docker-compose.test.yml",
    [string]$DataDir = "/app/data/import_1c",
    [string]$ServerIP = "5.35.124.149",
    [string]$RemoteDataPath = "/home/freesport/freesport/data/import_1c",
    [string]$SshKeyPath = "C:\\Users\\38670\\.ssh\\id_ed25519",
    [switch]$SkipSync = $false,
    [switch]$UseLocalData = $false
)

$ErrorActionPreference = "Stop"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞
function Sync-DataFromServer {
    param(
        [string]$ServerIP,
        [string]$RemoteDataPath,
        [string]$LocalDataPath,
        [string]$SshKeyPath
    )
    
    Write-Host "üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞ $ServerIP..." -ForegroundColor Cyan
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    $syncScriptPath = Join-Path (Split-Path $MyInvocation.MyCommand.Path -Parent) "..\server\sync_import_data.ps1"
    
    if (-not (Test-Path $syncScriptPath)) {
        throw "–°–∫—Ä–∏–ø—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: $syncScriptPath"
    }
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º ForceCopy –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–≤–µ–∂–∏—Ö –¥–∞–Ω–Ω—ã—Ö
    $syncArgs = @{
        IP = $ServerIP
        RemoteDataPath = $RemoteDataPath
        SshKeyPath = $SshKeyPath
        ForceCopy = $true
        SkipVerification = $false
    }
    
    try {
        & $syncScriptPath @syncArgs
        Write-Host "‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ" -ForegroundColor Green
    }
    catch {
        throw "‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö: $($_.Exception.Message)"
    }
}

try {
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ –ª–æ–∫–∞–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–∞–Ω–Ω—ã—Ö
    $projectRoot = Split-Path (Split-Path (Split-Path $MyInvocation.MyCommand.Path -Parent) -Parent) -Parent
    $localDataPath = Join-Path $projectRoot "data\import_1c"
    
    Write-Host "üìÅ –õ–æ–∫–∞–ª—å–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–∞–Ω–Ω—ã—Ö: $localDataPath" -ForegroundColor Gray
    Write-Host "üñ•Ô∏è  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ: $DataDir" -ForegroundColor Gray
    
    # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞, –µ—Å–ª–∏ –Ω–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ
    if (-not $SkipSync -and -not $UseLocalData) {
        Sync-DataFromServer -ServerIP $ServerIP -RemoteDataPath $RemoteDataPath -LocalDataPath $localDataPath -SshKeyPath $SshKeyPath
    }
    elseif ($UseLocalData) {
        Write-Host "‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –±–µ–∑ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏" -ForegroundColor Yellow
    }
    else {
        Write-Host "‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö (—Ñ–ª–∞–≥ -SkipSync)" -ForegroundColor Yellow
    }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if (-not (Test-Path $localDataPath)) {
        throw "‚ùå –õ–æ–∫–∞–ª—å–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $localDataPath"
    }
    
    Write-Host "üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ (PostgreSQL, Redis)..." -ForegroundColor Cyan
    docker compose -f $ComposeFile up -d --wait --remove-orphans

    Write-Host "üì¶ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π Django..." -ForegroundColor Cyan
    docker compose -f $ComposeFile run --rm backend python manage.py migrate

    Write-Host "‚¨áÔ∏è –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ –∏–∑ 1–°..." -ForegroundColor Cyan
    docker compose -f $ComposeFile run --rm backend python manage.py import_catalog_from_1c --data-dir $DataDir

    Write-Host "‚úÖ –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à—ë–Ω." -ForegroundColor Green
}
catch {
    Write-Error "‚ùå $($_.Exception.Message)"
    exit 1
}
